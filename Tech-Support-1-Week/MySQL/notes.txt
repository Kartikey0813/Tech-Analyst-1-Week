We are now on it and will work today to complete it fully. 

Video content link - URL("https://youtu.be/yE6tIle64tU?si=oD9iaSwOR6jSf1Ye")

Owner - Code with Harry - 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


What is a database:- A database is a place where we store our data in an organised way, so that it is 
easily accessible and fast to fetch with easy commands and less efforts. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

What is a query:- A query is a question that we ask to the database to fetch the details. So, it is a command that 
we give to the database to get all the details from them. 

Format:- SELECT * FROM customers;

-----------------------------------------------------------DBMS------------------------------------------------------------------------------------------------------------------------------------------------

What is DBMS:- DBMS stands for database management system. So, it is a system that interacts with the user, application and database to capture and analyse data. A few examples are MySQL, PostgresSQL, etc. 

-----------------------------------------------------------CRUD--------------------------------------------------------------------------------------------------------------------------------------------------

What is CRUD:- CRUD stands for Create, Read, Update and Delete. So, it is a set of operations that we can perform on a database. 
CRUD operations are used throughout all the systems perform basic tasks and hence it was inportant to work on it. 

Create - INSERT INTO customers (name, email) VALUES ('Kartikey Mishra', 'kartikeymishra509@gmail.com');

Read - SELECT * FROM customers WHERE name = "Kartikey Mishra";

Update - UPDATE customers SET email = 'kartikmishra686@gmail.com';

Delete - DELETE FROM customers WHERE name = 'Kartikey Mishra';

------------------------------------------------------Relational and Non-Relational Databses---------------------------------------------------------------------------------------------------------------------------------------------------

Relation Database:- store data in structured tables with rows and columns. Each table has a defined schema, and tables can be linked using relationships (foreign keys). They use SQL for queries.
Examples: MySQL, PostgreSQL, Oracle

Non-relational databases (NoSQL) store data in flexible formats like documents, key-value pairs, graphs, or wide-columns. They donâ€™t require a fixed schema and are suitable for unstructured or rapidly changing data.
Examples: MongoDB (document), Redis (key-value), Cassandra (wide-column), Neo4j (graph).

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Installation done for MySQL and now its time for some action. Both MySQL community edition and WorkBench has been installed. 

Commands:- 

CREATE DATABASE Name-of-the-database;

USE Name-of-the-database; 

Command to create a table with constrains:- 

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    gender ENUM('Male', 'Female', 'Other'),
    date_of_birth DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Dropping a Database - This command is used to drop the complete database. Syntax - DROP DATABASE Name-of-the-database;

My First SQL Script - 

CREATE DATABASE startersql;
USE startersql;

CREATE TABLE users (
	id INT auto_increment PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    gender ENUM('Male', 'Female', 'Others'),
    date_of_birth DATE,
    created_at TIMESTAMP DEFAULT current_timestamp
);

SELECT id, name, email FROM users;

The above script creates a table and then shows the selected keys. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Data Types Explained 

INT : Integer type, used for whole numbers.

VARCHAR(100) : Variable-length string, up to 100 characters.

ENUM : A string object with a value chosen from a list of permitted values. eg.

gender ENUM('Male', 'Female', 'Other')

DATE : Stores date values. eg date_of_birth DATE

TIMESTAMP : Stores date and time, automatically set to the current timestamp when a row is created.

BOOLEAN : Stores TRUE or FALSE values, often used for flags like is_active.

DECIMAL(10, 2) : Stores exact numeric data values, useful for financial data. The first number is the total number of digits, and the second is the number of digits after the decimal point.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Constraints Explained

AUTO_INCREMENT : Automatically generates a unique number for each row.

PRIMARY KEY : Uniquely identifies each row in the table.

NOT NULL : Ensures a column cannot have a NULL value.

UNIQUE : Ensures all values in a column are different.

DEFAULT : Sets a default value for a column if no value is provided. eg.

created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, is_active BOOLEAN - DEFAULT TRUE

----------------------------------------Working with Tables in MySQL-----------------------------------------------------------------------------------------------------------------------------------------

             Selecting Data from a Table 

Select All Columns
   
    SELECT * FROM users; This fetches every column and every row from the users table.

Select Specific Columns
    SELECT name, email FROM users;
    This only fetches the name and email columns from all rows.

Renaming a Table
    To rename an existing table:
    RENAME TABLE users TO customers;

To rename it back:
    RENAME TABLE customers TO users;


Altering a Table
    You can use ALTER TABLE to modify an existing table.

Add a Column
    ALTER TABLE users ADD COLUMN is_active BOOLEAN DEFAULT TRUE;

Drop a Column
    ALTER TABLE users DROP COLUMN is_active;

Modify a Column Type
    ALTER TABLE users MODIFY COLUMN name VARCHAR(150);

Move a Column to the First Position
    To move a column (e.g., email ) to the first position:
    ALTER TABLE users MODIFY COLUMN email VARCHAR(100) FIRST;

To move a column after another column (e.g., move gender after name ):
    ALTER TABLE users MODIFY COLUMN gender ENUM('Male', 'Female', 'Other') AFTER name;

Inserting Data into MySQL Tables
    To add data into a table, we use the INSERT INTO statement.

Insert Without Specifying Column Names (Full Row Insert)
    This method requires you to provide values for all columns in order, except columns with default values or AUTO_INCREMENT.

INSERT INTO users VALUES
    (1, 'Alice', 'alice@example.com', 'Female', '1995-05-14', DEFAULT); 

Not recommended if your table structure might change (e.g., new columns
added later).

Insert by Specifying Column Names (Best Practice)
    This method is safer and more readable. You only insert into specific columns.
    INSERT INTO users (name, email, gender, date_of_birth) VALUES
    ('Bob', 'bob@example.com', 'Male', '1990-11-23');

    or for multiple rows:
    INSERT INTO users (name, email, gender, date_of_birth) VALUES
    ('Bob', 'bob@example.com', 'Male', '1990-11-23'),
    ('Charlie', 'charlie@example.com', 'Other', '1988-02-17');
    The remaining columns like id (which is AUTO_INCREMENT ) and created_at
    (which has a default) are automatically handled by MySQL.


Insert Multiple Rows at Once

    INSERT INTO users (name, email, gender, date_of_birth) VALUES
    ('Charlie', 'charlie@example.com', 'Other', '1988-02-17'),
    ('David', 'david@example.com', 'Male', '2000-08-09'),
    ('Eva', 'eva@example.com', 'Female', '1993-12-30');
    
This is more efficient than inserting rows one by one.